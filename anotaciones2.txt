

Resolvedora: es una función que me resuelve la promesa de la llamada del método.
    -Siempre se usa en los fetchs porque queremos resolver esa solicitud al servidor.
    -Como vamos a resolver una promesa, la función debe ser asincrona y debe tener adentro un await ya que debe esperar
     esa respuesta, esa respuesta que puede fallar.  
     La estructura es:
        const nombre_función = async () => {
            const response = await nombre_metodo()
            ---Hay que guardar la respuesta  en un estado para después usarla. Sino no sirve de nada. 
        }

    -Después entra en juego el useEffect():
        -lo usamos para montar componentes por primera vez, sin la necesidad de que se accione manualmente con un botón
        -La estructura del useEffect es:
            useEffect(()=>{
                -hacer algo como llamar a la función que me hace el fetch
            },
            [])



Estilos: 
    Estilos de cartas: Parametros generales para una carta para que tengan un estilo rapido y sencillo:
    -que sea mas alta que ancha
    -bordes redondeados
    -sombras
    -hover
    -gap: espacio entre objetos
    -margen: m-auto : esto alinea los elementos en el centro. Crea un espacio alrededor del elemento
    -
    -flex items-center justify-center: centra vertical y horizontal
    -gap: espaciado entre los elementos. Solo anda cuando tenes displey flex
    -podes espaciar los elementos y manipular el css cuando los pones en la MainScreen
    -


Loading: cosas a tener en cuenta
    -Es un elemento que gire, puede ser una imagen o icono. 
    -La propiedad apropiada para eso es un: animate-spin
    -IMPORTANTE: Eso ponermelo en un estado que se llame loading, y hay que evaluarlo para ver cuando 

🔠 Tipografía
Clase	Descripción
text-sm, text-lg  : 	Tamaño del texto
font-bold, font-light   :	Peso del texto
text-gray-800	:   Color del texto (oscuro)
text-center, text-left	:   Alineación del texto
leading-relaxed	    :   Espaciado entre líneas

🎨 Colores
Clase	Uso
bg-white, bg-gray-100   :	Fondo claro
bg-blue-500, bg-red-500     :	Fondo de botón o destaque
text-gray-600, text-white   :	Texto

✅ Tip: Usá [gray-100 a gray-900] para diferentes tonos neutros

📦 Espaciado
Clase	Descripción
p-4, p-6    :	Padding interno
m-4, mb-4, mt-2    : 	Margen (espaciado externo)
gap-4   :   Espaciado entre hijos en grid/flex

🔳 Bordes y esquinas
Clase	Descripción
rounded, rounded-lg, rounded-2xl	Bordes redondeados
border, border-gray-300	Bordes exteriores

📐 Tamaños
Clase	Descripción
w-full, max-w-sm	Ancho completo / máximo pequeño
h-48, h-auto	Alto fijo o automático
-si pones w-[] => dentro de los parentesis podes poner un valor propio, no olvidarse de poner la medida %,px, vh y vw


🔄 Efectos y transiciones
Clase	Descripción
hover:bg-blue-600	Color al pasar el mouse
transition, duration-300	Transiciones suaves

Botones: 
    -cursor:pointer para que te ponga la manito de que podes clickear
    -hover 